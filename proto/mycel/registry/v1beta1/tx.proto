syntax = "proto3";

package mycel.registry.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "mycel/registry/v1beta1/top_level_domain.proto";

option go_package = "github.com/mycel-domain/mycel/x/registry/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc UpdateWalletRecord(MsgUpdateWalletRecord)
      returns (MsgUpdateWalletRecordResponse);
  rpc UpdateDnsRecord(MsgUpdateDnsRecord) returns (MsgUpdateDnsRecordResponse);
  rpc RegisterSecondLevelDomain(MsgRegisterSecondLevelDomain)
      returns (MsgRegisterSecondLevelDomainResponse);
  rpc RegisterTopLevelDomain(MsgRegisterTopLevelDomain)
      returns (MsgRegisterTopLevelDomainResponse);
  rpc WithdrawRegistrationFee(MsgWithdrawRegistrationFee)
      returns (MsgWithdrawRegistrationFeeResponse);
  rpc ExtendTopLevelDomainExpirationDate(MsgExtendTopLevelDomainExpirationDate)
      returns (MsgExtendTopLevelDomainExpirationDateResponse);
  rpc UpdateTextRecord(MsgUpdateTextRecord)
      returns (MsgUpdateTextRecordResponse);
  rpc UpdateTopLevelDomainRegistrationPolicy(
      MsgUpdateTopLevelDomainRegistrationPolicy)
      returns (MsgUpdateTopLevelDomainRegistrationPolicyResponse);
}
message MsgUpdateWalletRecord {
  string creator = 1;
  string name = 2;
  string parent = 3;
  string wallet_record_type = 4;
  string value = 5;
}

message MsgUpdateWalletRecordResponse {}

message MsgUpdateDnsRecord {
  string creator = 1;
  string name = 2;
  string parent = 3;
  string dns_record_type = 4;
  string value = 5;
}

message MsgUpdateDnsRecordResponse {}

message MsgRegisterSecondLevelDomain {
  string creator = 1;
  string name = 2;
  string parent = 3;
  uint64 registration_period_in_year = 4;
}

message MsgRegisterSecondLevelDomainResponse {}

message MsgRegisterTopLevelDomain {
  string creator = 1;
  string name = 2;
  uint64 registration_period_in_year = 3;
}

message MsgRegisterTopLevelDomainResponse {
  TopLevelDomain top_level_domain = 1;
  TopLevelDomainFee fee = 2;
}

message MsgWithdrawRegistrationFee {
  string creator = 1;
  string name = 2;
}

message MsgWithdrawRegistrationFeeResponse {
  repeated cosmos.base.v1beta1.Coin registration_fee = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgExtendTopLevelDomainExpirationDate {
  string creator = 1;
  string name = 2;
  uint64 extension_period_in_year = 3;
}

message MsgExtendTopLevelDomainExpirationDateResponse {
  TopLevelDomain top_level_domain = 1;
  TopLevelDomainFee fee = 2;
}

message MsgUpdateTextRecord {
  string creator = 1;
  string name = 2;
  string parent = 3;
  string key = 4;
  string value = 5;
}

message MsgUpdateTextRecordResponse {}

message MsgUpdateTopLevelDomainRegistrationPolicy {
  string creator = 1;
  string name = 2;
  string registration_policy = 3;
}

message MsgUpdateTopLevelDomainRegistrationPolicyResponse {}
