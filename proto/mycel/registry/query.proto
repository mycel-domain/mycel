syntax = "proto3";
package mycel.registry;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mycel/registry/params.proto";
import "mycel/registry/domain.proto";

option go_package = "github.com/mycel-domain/mycel/x/registry/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mycel/registry/params";
  
  }
  
  // Queries a list of Domain items.
  rpc Domain    (QueryGetDomainRequest) returns (QueryGetDomainResponse) {
    option (google.api.http).get = "/mycel/registry/domain/{name}/{parent}";
  
  }
  rpc DomainAll (QueryAllDomainRequest) returns (QueryAllDomainResponse) {
    option (google.api.http).get = "/mycel/registry/domain";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetDomainRequest {
  string name   = 1;
  string parent = 2;
}

message QueryGetDomainResponse {
  Domain domain = 1 [(gogoproto.nullable) = false];
}

message QueryAllDomainRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDomainResponse {
  repeated Domain                                 domain     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

