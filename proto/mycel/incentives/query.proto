syntax = "proto3";
package mycel.incentives;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "mycel/incentives/params.proto";
import "mycel/incentives/epoch_incentive.proto";
import "mycel/incentives/validator_incentive.proto";
import "mycel/incentives/delegetor_incentive.proto";

option go_package = "github.com/mycel-domain/mycel/x/incentives/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mycel/incentives/params";
  
  }
  
  // Queries a list of EpochIncentive items.
  rpc EpochIncentive    (QueryGetEpochIncentiveRequest) returns (QueryGetEpochIncentiveResponse) {
    option (google.api.http).get = "/mycel/incentives/epoch_incentive/{epoch}";
  
  }
  rpc EpochIncentiveAll (QueryAllEpochIncentiveRequest) returns (QueryAllEpochIncentiveResponse) {
    option (google.api.http).get = "/mycel/incentives/epoch_incentive";
  
  }
  
  // Queries a list of ValidatorIncentive items.
  rpc ValidatorIncentive    (QueryGetValidatorIncentiveRequest) returns (QueryGetValidatorIncentiveResponse) {
    option (google.api.http).get = "/mycel/incentives/validator_incentive/{address}";
  
  }
  rpc ValidatorIncentiveAll (QueryAllValidatorIncentiveRequest) returns (QueryAllValidatorIncentiveResponse) {
    option (google.api.http).get = "/mycel/incentives/validator_incentive";
  
  }
  
  // Queries a list of DelegetorIncentive items.
  rpc DelegetorIncentive    (QueryGetDelegetorIncentiveRequest) returns (QueryGetDelegetorIncentiveResponse) {
    option (google.api.http).get = "/mycel/incentives/delegetor_incentive/{address}";
  
  }
  rpc DelegetorIncentiveAll (QueryAllDelegetorIncentiveRequest) returns (QueryAllDelegetorIncentiveResponse) {
    option (google.api.http).get = "/mycel/incentives/delegetor_incentive";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetEpochIncentiveRequest {
  int64 epoch = 1;
}

message QueryGetEpochIncentiveResponse {
  EpochIncentive epochIncentive = 1 [(gogoproto.nullable) = false];
}

message QueryAllEpochIncentiveRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEpochIncentiveResponse {
  repeated EpochIncentive                         epochIncentive = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination     = 2;
}

message QueryGetValidatorIncentiveRequest {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryGetValidatorIncentiveResponse {
  ValidatorIncentive validatorIncentive = 1 [(gogoproto.nullable) = false];
}

message QueryAllValidatorIncentiveRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllValidatorIncentiveResponse {
  repeated ValidatorIncentive                     validatorIncentive = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination         = 2;
}

message QueryGetDelegetorIncentiveRequest {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryGetDelegetorIncentiveResponse {
  DelegetorIncentive delegetorIncentive = 1 [(gogoproto.nullable) = false];
}

message QueryAllDelegetorIncentiveRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDelegetorIncentiveResponse {
  repeated DelegetorIncentive                     delegetorIncentive = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination         = 2;
}

