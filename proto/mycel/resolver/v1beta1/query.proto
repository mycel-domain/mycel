syntax = "proto3";

package mycel.resolver.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mycel/registry/v1beta1/second_level_domain.proto";
import "mycel/resolver/v1beta1/params.proto";

option go_package = "github.com/mycel-domain/mycel/x/resolver/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get =
        "/mycel/resolver/v1beta1/params";
  }

  // Queries a list of QueryWalletRecord items.
  rpc WalletRecord(QueryWalletRecordRequest)
      returns (QueryWalletRecordResponse) {
    option (google.api.http).get =
        "/mycel/resolver/v1beta1/wallet_record/{domain_name}/"
        "{domain_parent}/{wallet_record_type}";
  }

  // Queries a list of DnsRecord items.
  rpc DnsRecord(QueryDnsRecordRequest) returns (QueryDnsRecordResponse) {
    option (google.api.http).get =
        "/mycel/resolver/v1beta1/dns_record/{domain_name}/"
        "{domain_parent}/{dns_record_type}";
  }

  // Queries a list of AllRecord items.
  rpc AllRecords(QueryAllRecordsRequest) returns (QueryAllRecordsResponse) {
    option (google.api.http).get = "/mycel/resolver/v1beta1/"
                                   "all_records/{domain_name}/{domain_parent}";
  }

  // Queries a list of TextRecord items.
  rpc TextRecord(QueryTextRecordRequest) returns (QueryTextRecordResponse) {
    option (google.api.http).get =
        "/mycel/resolver/v1beta1/text_record/{domain_name}/"
        "{domain_parent}/{key}";
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {

  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryWalletRecordRequest {
  string domain_name = 1;
  string domain_parent = 2;
  string wallet_record_type = 3;
}

message QueryWalletRecordResponse { mycel.registry.v1beta1.WalletRecord value = 1; }

message QueryDnsRecordRequest {
  string domain_name = 1;
  string domain_parent = 2;
  string dns_record_type = 3;
}

message QueryDnsRecordResponse { mycel.registry.v1beta1.DnsRecord value = 1; }

message QueryAllRecordsRequest {
  string domain_name = 1;
  string domain_parent = 2;
}

message QueryAllRecordsResponse {
  map<string, mycel.registry.v1beta1.Record> values = 1;
}

message QueryTextRecordRequest {
  string domain_name = 1;
  string domain_parent = 2;
  string key = 3;
}

message QueryTextRecordResponse { mycel.registry.v1beta1.TextRecord value = 1; }
