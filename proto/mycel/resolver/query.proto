syntax = "proto3";

package mycel.resolver;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mycel/resolver/params.proto";
import "mycel/registry/second_level_domain.proto";

option go_package = "github.com/mycel-domain/mycel/x/resolver/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mycel-domain/mycel/resolver/params";
  
  }
  
  // Queries a list of QueryWalletRecord items.
  rpc WalletRecord (QueryWalletRecordRequest) returns (QueryWalletRecordResponse) {
    option (google.api.http).get = "/mycel-domain/mycel/resolver/wallet_record/{domainName}/{domainParent}/{walletRecordType}";
  
  }
  
  // Queries a list of DnsRecord items.
  rpc DnsRecord (QueryDnsRecordRequest) returns (QueryDnsRecordResponse) {
    option (google.api.http).get = "/mycel-domain/mycel/resolver/dns_record/{domainName}/{domainParent}/{dnsRecordType}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryWalletRecordRequest {
  string domainName       = 1;
  string domainParent     = 2;
  string walletRecordType = 3;
}

message QueryWalletRecordResponse {
  mycel.registry.WalletRecord value = 1;
}

message QueryDnsRecordRequest {
  string domainName          = 1;
  string domainParent        = 2;
  string dnsRecordType = 3;
}

message QueryDnsRecordResponse {
 mycel.registry.DnsRecord value = 1;
}

