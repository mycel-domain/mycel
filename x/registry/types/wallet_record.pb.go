// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mycel/registry/wallet_record.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type WalletRecordType int32

const (
	// BTC 0xxx
	WalletRecordType_BITCOIN_MAINNET WalletRecordType = 0
	WalletRecordType_BITCOIN_TESTNET WalletRecordType = 1
	// EVM 1xxxx
	WalletRecordType_ETHEREUM_MAINNET WalletRecordType = 10000
	WalletRecordType_ETHEREUM_GOERLI  WalletRecordType = 10001
	WalletRecordType_ETHEREUM_SEPOLIA WalletRecordType = 10002
	WalletRecordType_POLYGON_MAINNET  WalletRecordType = 10003
	WalletRecordType_POLYGON_MUMBAI   WalletRecordType = 10004
	// MOVE 2xxxx
	WalletRecordType_APTOS_MAINNET WalletRecordType = 20000
	WalletRecordType_APTOS_TESTNET WalletRecordType = 20001
	WalletRecordType_SUI_MAINNET   WalletRecordType = 20002
	WalletRecordType_SUI_TESTNET   WalletRecordType = 20003
	// SOLANA 3xxxx
	WalletRecordType_SOLANA_MAINNET WalletRecordType = 30000
	WalletRecordType_SOLANA_TESTNET WalletRecordType = 30001
)

var WalletRecordType_name = map[int32]string{
	0:     "BITCOIN_MAINNET",
	1:     "BITCOIN_TESTNET",
	10000: "ETHEREUM_MAINNET",
	10001: "ETHEREUM_GOERLI",
	10002: "ETHEREUM_SEPOLIA",
	10003: "POLYGON_MAINNET",
	10004: "POLYGON_MUMBAI",
	20000: "APTOS_MAINNET",
	20001: "APTOS_TESTNET",
	20002: "SUI_MAINNET",
	20003: "SUI_TESTNET",
	30000: "SOLANA_MAINNET",
	30001: "SOLANA_TESTNET",
}

var WalletRecordType_value = map[string]int32{
	"BITCOIN_MAINNET":  0,
	"BITCOIN_TESTNET":  1,
	"ETHEREUM_MAINNET": 10000,
	"ETHEREUM_GOERLI":  10001,
	"ETHEREUM_SEPOLIA": 10002,
	"POLYGON_MAINNET":  10003,
	"POLYGON_MUMBAI":   10004,
	"APTOS_MAINNET":    20000,
	"APTOS_TESTNET":    20001,
	"SUI_MAINNET":      20002,
	"SUI_TESTNET":      20003,
	"SOLANA_MAINNET":   30000,
	"SOLANA_TESTNET":   30001,
}

func (x WalletRecordType) String() string {
	return proto.EnumName(WalletRecordType_name, int32(x))
}

func (WalletRecordType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_163ce144c4dda9d7, []int{0}
}

type WalletAddressFormat int32

const (
	WalletAddressFormat_BITCOIN  WalletAddressFormat = 0
	WalletAddressFormat_ETHEREUM WalletAddressFormat = 1
	WalletAddressFormat_MOVE     WalletAddressFormat = 2
	WalletAddressFormat_SOLANA   WalletAddressFormat = 3
)

var WalletAddressFormat_name = map[int32]string{
	0: "BITCOIN",
	1: "ETHEREUM",
	2: "MOVE",
	3: "SOLANA",
}

var WalletAddressFormat_value = map[string]int32{
	"BITCOIN":  0,
	"ETHEREUM": 1,
	"MOVE":     2,
	"SOLANA":   3,
}

func (x WalletAddressFormat) String() string {
	return proto.EnumName(WalletAddressFormat_name, int32(x))
}

func (WalletAddressFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_163ce144c4dda9d7, []int{1}
}

func init() {
	proto.RegisterEnum("mycel.registry.WalletRecordType", WalletRecordType_name, WalletRecordType_value)
	proto.RegisterEnum("mycel.registry.WalletAddressFormat", WalletAddressFormat_name, WalletAddressFormat_value)
}

func init() {
	proto.RegisterFile("mycel/registry/wallet_record.proto", fileDescriptor_163ce144c4dda9d7)
}

var fileDescriptor_163ce144c4dda9d7 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd1, 0xcd, 0x4e, 0xea, 0x40,
	0x14, 0xc0, 0xf1, 0x0e, 0xf7, 0x86, 0x4b, 0x0e, 0xf7, 0xc2, 0xdc, 0x01, 0xb7, 0x5d, 0xb8, 0x24,
	0xb1, 0x5d, 0xf8, 0x04, 0xc5, 0x0c, 0xd0, 0xa4, 0xed, 0x10, 0x5a, 0x34, 0xba, 0x21, 0x40, 0x27,
	0x48, 0x42, 0x2d, 0x99, 0xd6, 0x68, 0xdf, 0x02, 0x3f, 0x96, 0x2c, 0xfc, 0x58, 0xb8, 0xd5, 0xb7,
	0x70, 0xc9, 0xd2, 0xa5, 0x81, 0x1d, 0x4f, 0x61, 0x28, 0xb6, 0xc5, 0x65, 0xff, 0xf9, 0xa5, 0x33,
	0x73, 0x0e, 0xec, 0x7b, 0xd1, 0x90, 0x4f, 0x54, 0xc1, 0x47, 0xe3, 0x20, 0x14, 0x91, 0x7a, 0xd5,
	0x9f, 0x4c, 0x78, 0xd8, 0x13, 0x7c, 0xe8, 0x0b, 0x57, 0x99, 0x0a, 0x3f, 0xf4, 0x49, 0x29, 0x36,
	0x4a, 0x62, 0x6a, 0x2f, 0x39, 0xc0, 0x27, 0xb1, 0xeb, 0xc4, 0xcc, 0x89, 0xa6, 0x9c, 0x54, 0xa0,
	0x5c, 0xd7, 0x9d, 0x23, 0xa6, 0x5b, 0x3d, 0x53, 0xd3, 0x2d, 0x8b, 0x3a, 0x58, 0xda, 0x8d, 0x0e,
	0xb5, 0x9d, 0x4d, 0x44, 0x64, 0x0f, 0x30, 0x75, 0x5a, 0xb4, 0x43, 0xbb, 0x66, 0x4a, 0x67, 0x16,
	0xa9, 0x42, 0x39, 0xcd, 0x4d, 0x46, 0x3b, 0x86, 0x8e, 0x6f, 0xac, 0x1f, 0xd8, 0xa6, 0x6d, 0x66,
	0xe8, 0x1a, 0xbe, 0x8d, 0x71, 0x9b, 0x19, 0xa7, 0x4d, 0x96, 0x9d, 0x76, 0x67, 0x91, 0x0a, 0x94,
	0xd2, 0xda, 0x35, 0xeb, 0x9a, 0x8e, 0xef, 0x37, 0xf1, 0x9f, 0xd6, 0x76, 0x98, 0x9d, 0xc2, 0x87,
	0x39, 0xca, 0x62, 0x72, 0xad, 0xc7, 0x39, 0x22, 0xff, 0xa1, 0x68, 0x77, 0xf5, 0xd4, 0x3d, 0x65,
	0x29, 0x51, 0xcf, 0x73, 0x44, 0xaa, 0x50, 0xb2, 0x99, 0xa1, 0x59, 0x5a, 0x0a, 0x5f, 0xd7, 0xbb,
	0x35, 0xb1, 0x6f, 0x6b, 0x54, 0x6b, 0x40, 0x65, 0x3b, 0x28, 0xcd, 0x75, 0x05, 0x0f, 0x82, 0x86,
	0x2f, 0xbc, 0x7e, 0x48, 0x8a, 0xf0, 0xe7, 0x7b, 0x2c, 0x58, 0x22, 0x7f, 0xa1, 0x90, 0xbc, 0x10,
	0x23, 0x52, 0x80, 0xdf, 0x26, 0x3b, 0xa6, 0x38, 0x47, 0x00, 0xf2, 0xdb, 0x3f, 0xe2, 0x5f, 0xf5,
	0xd6, 0xfb, 0x52, 0x46, 0x8b, 0xa5, 0x8c, 0x3e, 0x97, 0x32, 0x9a, 0xad, 0x64, 0x69, 0xb1, 0x92,
	0xa5, 0x8f, 0x95, 0x2c, 0x9d, 0x29, 0xa3, 0x71, 0x78, 0x7e, 0x39, 0x50, 0x86, 0xbe, 0xa7, 0xc6,
	0x6b, 0x3a, 0x70, 0x7d, 0xaf, 0x3f, 0xbe, 0xd8, 0x7e, 0xa8, 0xd7, 0xd9, 0x66, 0xc3, 0x68, 0xca,
	0x83, 0x41, 0x3e, 0x5e, 0xe9, 0xe1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0xc7, 0xa1, 0xf4,
	0xf8, 0x01, 0x00, 0x00,
}
